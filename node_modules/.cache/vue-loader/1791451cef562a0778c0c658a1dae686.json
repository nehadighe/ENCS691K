{"remainingRequest":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/src/components/LoginForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/src/components/LoginForm.vue","mtime":1600981336645},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uL2Fzc2V0cy9jb2xvcnMuY3NzIjsKCi5jYXJkLXNpZ25pbmcgewogIHBhZGRpbmc6IDMwcHg7Cn0K"},{"version":3,"sources":["LoginForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;;AAEA;AACA;AACA","file":"LoginForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-card min-width=\"450\" class=\"card-signing elevation-2\">\n      <h1 class=\"pb-5 text-center dark-2-golden-font\">Login</h1>\n      <v-form v-model=\"valid\">\n        <v-text-field\n          :color=\"themeColor\"\n          v-model=\"user.username\"\n          :rules=\"rules\"\n          autocomplete=\"username\"\n          name=\"signin-username\"\n          required\n          label=\"Username\"\n          filled\n        ></v-text-field>\n        <v-text-field\n          v-model=\"user.password\"\n          :color=\"themeColor\"\n          :append-icon=\"eye ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"eye ? 'text' : 'password'\"\n          :rules=\"rules\"\n          autocomplete=\"new-password\"\n          required\n          filled\n          name=\"signin-password\"\n          label=\"Password\"\n          @click:append=\"eye = !eye\"\n          @keyup.enter=\"login\"\n        ></v-text-field>\n        <v-row>\n          <v-col cols=\"12\" class=\"d-flex justify-center\">\n            <v-btn\n              :style=\"valid ? {transition: `0.3s ease`} : null\"\n              :color=\"valid ? themeColor : null\"\n              :class=\"[valid ? `white--text` : '']\"\n            >Login</v-btn>\n          </v-col>\n          <!-- <v-col cols=\"12\" md=\"6\" class=\"d-flex justify-center justify-md-start\">\n                  <v-btn\n                    v-if=\"!requestLoading\"\n                    :style=\"valid ? {transition: `0.3s ease`} : null\"\n                    :color=\"valid ? themeColor : null\"\n                    :class=\"[valid ? `white--black` : '']\"\n                    @click=\"login\"\n                  >Login</v-btn>\n          </v-col>-->\n        </v-row>\n      </v-form>\n    </v-card>\n    <v-snackbar :color=\"color\" v-model=\"alert\">\n      <!-- <v-snackbar :color=\"bannerColor\" timeout=\"30000\" :v-model=\"bannerAlert\"> -->\n      <div class=\"d-flex flex-row align-center justify-space-between\">\n        <p class=\"mb-0\">{{ text }}</p>\n        <v-btn color=\"white\" text @click=\"banner.alert = false\">\n          <v-icon small>mdi-window-close</v-icon>\n        </v-btn>\n      </div>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { Auth } from \"aws-amplify\";\n\nexport default {\n  name: \"LoginForm\",\n  data: () => ({\n    themeColor: \"#900028\",\n    eye: false,\n    valid: true,\n    emailRules: [\n      v => !!v || \"E-mail is required\",\n      v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"\n    ],\n    rules: [v => !!v || \"Input is required\"],\n    user: {\n      username: \"\",\n      password: \"\"\n    },\n    timeout: 30000,\n    alert: false,\n    text: null,\n    color: null\n  }),\n  methods: {\n    async login() {\n      if (!this.valid) {\n        (this.text = \"Input some text\"),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n      }\n      let username, password, email;\n      username = this.user.username;\n      password = this.user.password;\n      await Auth.signIn(username, password)\n        .then(() => {\n          this.user = {\n            username: \"\",\n            password: \"\"\n          };\n          this.$refs.form.reset();\n          this.$router.push({ name: \"home\" });\n        })\n        .catch(error => {\n          (this.text = error.message),\n            (this.color = \"#900028\"),\n            (this.alert = true);\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n\n<style>\n@import \"../assets/colors.css\";\n\n.card-signing {\n  padding: 30px;\n}\n</style>"]}]}