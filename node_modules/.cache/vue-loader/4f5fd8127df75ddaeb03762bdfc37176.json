{"remainingRequest":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/src/components/Auth/SignUpForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/src/components/Auth/SignUpForm.vue","mtime":1602462384257},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/elchoco/concordia/fall_20_classes/ENCS691/final_project/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi8uLi9hc3NldHMvY29sb3JzLmNzcyI7CkBpbXBvcnQgIi4uLy4uL2Fzc2V0cy9saW5lLmNzcyI7CgouY2FyZC1zaWduaW5nIHsKICBwYWRkaW5nOiAzMHB4Owp9CgouZXh0cmFUZXh0U3R5bGUgewogIHRyYW5zaXRpb246IDAuM3MgZWFzZTsKICBjb2xvcjogI2IwOGM2MiAhaW1wb3J0YW50Owp9CgouZXh0cmFUZXh0U3R5bGU6aG92ZXIgewogIHRyYW5zaXRpb246IDAuM3MgZWFzZTsKICBjb2xvcjogI2FkNzEyYSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["SignUpForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SignUpForm.vue","sourceRoot":"src/components/Auth","sourcesContent":["<template>\n  <div class>\n    <v-card min-width=\"300\" max-width=\"800\" class=\"card-signing elevation-2\">\n      <!-- data is going to have to be sent down to the children -->\n      <Register\n        v-if=\"localSignUpState === 'register'\"\n        v-on:signUp=\"signUp($event)\"\n        v-on:resetState=\"resetState()\"\n        :requestLoading=\"requestLoading\"\n        :themeColor=\"themeColor\"\n      />\n      <Verification\n        v-if=\"localSignUpState === 'verification'\"\n        v-on:verifyCode=\"verifyCode($event)\"\n        v-on:resentVerification=\"resentVerification()\"\n        :themeColor=\"themeColor\"\n      />\n    </v-card>\n    <!-- Banner -->\n    <v-snackbar :color=\"color\" :timeout=\"snacktimeout\" v-model=\"alert\">\n      <div class=\"d-flex flex-row align-center justify-space-between\">\n        <p class=\"mb-0 white--text\">{{ text }}</p>\n        <v-btn color=\"white\" text @click=\"alert = false\">\n          <v-icon small>mdi-window-close</v-icon>\n        </v-btn>\n      </div>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { Auth } from \"aws-amplify\";\nimport { mapActions } from \"vuex\";\nimport Register from \"./Register\";\nimport Verification from \"./Verification\";\n\nexport default {\n  name: \"SignInForm\",\n  components: {\n    Register,\n    Verification\n  },\n  data: () => ({\n    themeColor: \"#900028\",\n    username: \"\",\n    snacktimeout: 8000,\n    alert: false,\n    text: null,\n    color: null,\n    requestLoading: false,\n    localSignUpState: \"register\"\n  }),\n  methods: {\n    ...mapActions([\"resetAppState\", \"userSignUp\"]),\n    async signUp(event) {\n      this.requestLoading = true;\n      if (!event.valid) {\n        (this.text = \"Input some text\"),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n        this.requestLoading = false;\n        return;\n      } else if (event.password != event.confirmPassword) {\n        (this.text = \"Passwords must be same\"),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n        this.requestLoading = false;\n        return;\n      }\n      try {\n        this.username = event.user.username;\n        let username, password, email;\n        username = event.user.username;\n        password = event.password;\n        email = event.user.email;\n        // sending this data to Cognito\n        const { user } = await Auth.signUp({\n          username,\n          password,\n          attributes: {\n            email // optional\n          }\n        });\n        console.log('line 84- ', user);\n        event.user.authenticated = true // adding authentication property\n        this.userSignUp(event.user); // sending data to the store\n        (this.text = \"Your account has been created successfully!\"),\n          (this.color = \"success\"),\n          (this.alert = true);\n        // changing local signUp state for account verification\n        this.localSignUpState = \"verification\";\n        this.requestLoading = false;\n      } catch (error) {\n        (this.text = error.message),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n        this.requestLoading = false;\n      }\n    },\n    async verifyCode(event) {\n      this.requestLoading = true;\n      try {\n        await Auth.confirmSignUp(this.username, event.code);\n        this.requestLoading = false;\n        this.$router.push({ name: \"home\" });\n      } catch (error) {\n        (this.text = error.message),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n        this.requestLoading = false;\n      }\n    },\n    async resentVerification() {\n      // this avoid overloading the resend of events without the HTTP error\n      try {\n        await Auth.resendSignUp(this.username);\n        (this.text = \"Code resent successfully\"),\n          (this.color = \"success\"),\n          (this.alert = true);\n      } catch (err) {\n        (this.text = err.message),\n          (this.color = \"#900028\"),\n          (this.alert = true);\n        console.log(\"error resending code: \", err);\n      }\n    },\n    resetState() {\n      this.resetAppState();\n    }\n  }\n};\n</script>\n\n<style>\n@import \"../../assets/colors.css\";\n@import \"../../assets/line.css\";\n\n.card-signing {\n  padding: 30px;\n}\n\n.extraTextStyle {\n  transition: 0.3s ease;\n  color: #b08c62 !important;\n}\n\n.extraTextStyle:hover {\n  transition: 0.3s ease;\n  color: #ad712a !important;\n}\n</style>"]}]}