"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.legacyUpdateResource = void 0;
const dynamic_imports_1 = require("./utils/dynamic-imports");
const legacy_add_resource_1 = require("./legacy-add-resource");
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const aws_constants_1 = require("./aws-constants");
exports.legacyUpdateResource = async (updateWalkthroughPromise, context, category, service) => {
    let answers;
    let { cfnFilename } = await dynamic_imports_1.serviceMetadataFor(service);
    const projectBackendDirPath = context.amplify.pathManager.getBackendDirPath();
    const result = await updateWalkthroughPromise;
    const options = {};
    if (result) {
        if (result.answers) {
            ({ answers } = result);
            options.dependsOn = result.dependsOn;
        }
        else {
            answers = result;
        }
        if (!result.noCfnFile) {
            if (answers.customCfnFile) {
                cfnFilename = answers.customCfnFile;
            }
            legacy_add_resource_1.copyCfnTemplate(context, category, answers, cfnFilename);
            const parameters = { ...answers };
            const resourceDirPath = path_1.default.join(projectBackendDirPath, category, parameters.resourceName);
            fs_extra_1.default.ensureDirSync(resourceDirPath);
            const parametersFilePath = path_1.default.join(resourceDirPath, aws_constants_1.parametersFileName);
            const jsonString = JSON.stringify(parameters, null, 4);
            fs_extra_1.default.writeFileSync(parametersFilePath, jsonString, 'utf8');
            context.amplify.updateamplifyMetaAfterResourceUpdate(category, answers.resourceName, 'dependsOn', answers.dependsOn);
        }
    }
};
//# sourceMappingURL=legacy-update-resource.js.map