import { CognitoUserPoolConfiguration, CognitoIdentityPoolConfiguration, NoCognitoIdentityPool } from './add';
export interface UpdateAuthRequest {
    version: 1;
    serviceModification: CognitoServiceModification;
}
export declare type CognitoServiceModification = BaseCognitoServiceModification & (NoCognitoIdentityPool | ModifyCognitoIdentityPool);
export interface BaseCognitoServiceModification {
    serviceName: 'Cognito';
    userPoolModification: CognitoUserPoolModification;
}
export interface ModifyCognitoIdentityPool {
    includeIdentityPool: true;
    identityPoolModification: CognitoIdentityPoolModification;
}
export declare type CognitoUserPoolModification = Pick<CognitoUserPoolConfiguration, 'userPoolGroups' | 'adminQueries' | 'mfa' | 'passwordPolicy' | 'passwordRecovery' | 'refreshTokenPeriod' | 'readAttributes' | 'writeAttributes' | 'oAuth' | 'addUserToGroup' | 'emailBlacklist' | 'emailWhitelist' | 'customAuthScaffolding'>;
export declare type CognitoIdentityPoolModification = Pick<CognitoIdentityPoolConfiguration, 'unauthenticatedLogin' | 'identitySocialFederation'>;
//# sourceMappingURL=update.d.ts.map