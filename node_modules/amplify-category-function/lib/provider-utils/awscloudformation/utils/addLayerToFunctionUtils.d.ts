import { FunctionDependency, LambdaLayer } from 'amplify-function-plugin-interface';
import { LayerMetadataFactory } from './layerParams';
export declare const provideExistingARNsPrompt = "Provide existing Lambda layer ARNs";
export declare const askLayerSelection: (layerMetadataFactory: LayerMetadataFactory, amplifyMeta: any, runtimeValue: string, previousSelections: LambdaLayer[], backendDir: string) => Promise<{
    lambdaLayers: LambdaLayer[];
    dependsOn: FunctionDependency[];
    askArnQuestion: boolean;
}>;
export declare const askCustomArnQuestion: (numLayersSelected: number, previousSelections?: LambdaLayer[]) => Promise<LambdaLayer[]>;
export declare const askLayerOrderQuestion: (currentSelections: LambdaLayer[], previousSelections?: LambdaLayer[]) => Promise<LambdaLayer[]>;
//# sourceMappingURL=addLayerToFunctionUtils.d.ts.map