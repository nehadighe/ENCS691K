export const coreAttributes: {
    name: string;
    value: string;
}[];
export const appClientReadAttributes: {
    name: string;
    value: string;
}[];
export const authSelectionMap: {
    name: string;
    value: string;
}[];
export function getAllMaps(edit: any): {
    coreAttributes: {
        name: string;
        value: string;
    }[];
    authSelectionMap: {
        name: string;
        value: string;
    }[];
    appClientReadAttributes: {
        name: string;
        value: string;
    }[];
    authProviders: {
        name: string;
        value: string;
        answerHashKey: string;
    }[];
    mfaOptions: {
        name: string;
        value: string;
    }[];
    mfaMethods: {
        name: string;
        value: string;
    }[];
    emailRegistration: {
        name: string;
        value: string[];
    }[];
    defaultPrompMap: {
        name: string;
        value: string;
    }[];
    booleanOptions: ({
        name: string;
        value: string;
    } | {
        name: string;
        value: boolean;
    })[];
    signInOptions: {
        name: string;
        value: string;
    }[];
    socialLoginOptions: ({
        name: string;
        value: string;
    } | {
        name: string;
        value: null;
    })[];
    hostedUIProviders: {
        name: string;
        value: string;
    }[];
    oAuthFlows: {
        name: string;
        value: string;
    }[];
    oAuthScopes: {
        name: string;
        value: string;
    }[];
    authorizeScopes: {
        name: string;
        value: string;
    }[];
    attributeProviderMap: {
        address: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        birthdate: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        email: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {
                attr: string;
                scope: string;
            };
        };
        family_name: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        gender: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        given_name: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        locale: {
            facebook: {};
            google: {};
            loginwithamazon: {
                attr: string;
                scope: string;
            };
        };
        middle_name: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {};
            loginwithamazon: {};
        };
        name: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {
                attr: string;
                scope: string;
            };
        };
        nickname: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        phone_number: {
            facebook: {};
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        picture: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {};
        };
        preferred_username: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        profile: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        zoneinfo: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        website: {
            facebook: {};
            google: {};
            loginwithamazon: {};
        };
        username: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {
                attr: string;
                scope: string;
            };
            loginwithamazon: {
                attr: string;
                scope: string;
            };
        };
        updated_at: {
            facebook: {
                attr: string;
                scope: string;
            };
            google: {};
            loginwithamazon: {};
        };
    };
    updateFlowMap: ({
        name: string;
        value: string;
        conditionKey: string;
        conditionMsg?: undefined;
    } | {
        name: string;
        value: string;
        conditionKey?: undefined;
        conditionMsg?: undefined;
    } | {
        name: string;
        value: string;
        conditionKey: string;
        conditionMsg: string;
    })[];
    capabilities: ({
        name: string;
        value: string;
        triggers: {
            DefineAuthChallenge: string[];
            CreateAuthChallenge: string[];
            VerifyAuthChallengeResponse: string[];
            CustomMessage?: undefined;
            PostConfirmation?: undefined;
            PreSignup?: undefined;
            PreTokenGeneration?: undefined;
        };
    } | {
        name: string;
        value: string;
        triggers: {
            CustomMessage: string[];
            DefineAuthChallenge?: undefined;
            CreateAuthChallenge?: undefined;
            VerifyAuthChallengeResponse?: undefined;
            PostConfirmation?: undefined;
            PreSignup?: undefined;
            PreTokenGeneration?: undefined;
        };
    } | {
        name: string;
        value: string;
        triggers: {
            PostConfirmation: string[];
            DefineAuthChallenge?: undefined;
            CreateAuthChallenge?: undefined;
            VerifyAuthChallengeResponse?: undefined;
            CustomMessage?: undefined;
            PreSignup?: undefined;
            PreTokenGeneration?: undefined;
        };
    } | {
        name: string;
        value: string;
        triggers: {
            PreSignup: string[];
            DefineAuthChallenge?: undefined;
            CreateAuthChallenge?: undefined;
            VerifyAuthChallengeResponse?: undefined;
            CustomMessage?: undefined;
            PostConfirmation?: undefined;
            PreTokenGeneration?: undefined;
        };
    } | {
        name: string;
        value: string;
        triggers: {
            PreTokenGeneration: string[];
            DefineAuthChallenge?: undefined;
            CreateAuthChallenge?: undefined;
            VerifyAuthChallengeResponse?: undefined;
            CustomMessage?: undefined;
            PostConfirmation?: undefined;
            PreSignup?: undefined;
        };
    })[];
    additonalConfigMap: {
        name: string;
        value: string[];
    }[];
};
export const authProviders: {
    name: string;
    value: string;
    answerHashKey: string;
}[];
export const mfaOptions: {
    name: string;
    value: string;
}[];
export const mfaMethods: {
    name: string;
    value: string;
}[];
export const emailRegistration: {
    name: string;
    value: string[];
}[];
export const defaultPrompMap: {
    name: string;
    value: string;
}[];
export const booleanOptions: ({
    name: string;
    value: string;
} | {
    name: string;
    value: boolean;
})[];
export const signInOptions: {
    name: string;
    value: string;
}[];
export const socialLoginOptions: ({
    name: string;
    value: string;
} | {
    name: string;
    value: null;
})[];
export const hostedUIProviders: {
    name: string;
    value: string;
}[];
export const authorizeScopes: {
    name: string;
    value: string;
}[];
export const oAuthFlows: {
    name: string;
    value: string;
}[];
export const oAuthScopes: {
    name: string;
    value: string;
}[];
export namespace messages {
    export const authExists: string;
    export const dependenciesExists: string;
}
export namespace attributeProviderMap {
    export namespace address {
        export const facebook: {};
        export const google: {};
        export const loginwithamazon: {};
    }
    export namespace birthdate {
        export namespace facebook_1 {
            export const attr: string;
            export const scope: string;
        }
        export { facebook_1 as facebook };
        export namespace google_1 {
            const attr_1: string;
            export { attr_1 as attr };
            const scope_1: string;
            export { scope_1 as scope };
        }
        export { google_1 as google };
        const loginwithamazon_1: {};
        export { loginwithamazon_1 as loginwithamazon };
    }
    export namespace email {
        export namespace facebook_2 {
            const attr_2: string;
            export { attr_2 as attr };
            const scope_2: string;
            export { scope_2 as scope };
        }
        export { facebook_2 as facebook };
        export namespace google_2 {
            const attr_3: string;
            export { attr_3 as attr };
            const scope_3: string;
            export { scope_3 as scope };
        }
        export { google_2 as google };
        export namespace loginwithamazon_2 {
            const attr_4: string;
            export { attr_4 as attr };
            const scope_4: string;
            export { scope_4 as scope };
        }
        export { loginwithamazon_2 as loginwithamazon };
    }
    export namespace family_name {
        export namespace facebook_3 {
            const attr_5: string;
            export { attr_5 as attr };
            const scope_5: string;
            export { scope_5 as scope };
        }
        export { facebook_3 as facebook };
        export namespace google_3 {
            const attr_6: string;
            export { attr_6 as attr };
            const scope_6: string;
            export { scope_6 as scope };
        }
        export { google_3 as google };
        const loginwithamazon_3: {};
        export { loginwithamazon_3 as loginwithamazon };
    }
    export namespace gender {
        export namespace facebook_4 {
            const attr_7: string;
            export { attr_7 as attr };
            const scope_7: string;
            export { scope_7 as scope };
        }
        export { facebook_4 as facebook };
        export namespace google_4 {
            const attr_8: string;
            export { attr_8 as attr };
            const scope_8: string;
            export { scope_8 as scope };
        }
        export { google_4 as google };
        const loginwithamazon_4: {};
        export { loginwithamazon_4 as loginwithamazon };
    }
    export namespace given_name {
        export namespace facebook_5 {
            const attr_9: string;
            export { attr_9 as attr };
            const scope_9: string;
            export { scope_9 as scope };
        }
        export { facebook_5 as facebook };
        export namespace google_5 {
            const attr_10: string;
            export { attr_10 as attr };
            const scope_10: string;
            export { scope_10 as scope };
        }
        export { google_5 as google };
        const loginwithamazon_5: {};
        export { loginwithamazon_5 as loginwithamazon };
    }
    export namespace locale {
        const facebook_6: {};
        export { facebook_6 as facebook };
        const google_6: {};
        export { google_6 as google };
        export namespace loginwithamazon_6 {
            const attr_11: string;
            export { attr_11 as attr };
            const scope_11: string;
            export { scope_11 as scope };
        }
        export { loginwithamazon_6 as loginwithamazon };
    }
    export namespace middle_name {
        export namespace facebook_7 {
            const attr_12: string;
            export { attr_12 as attr };
            const scope_12: string;
            export { scope_12 as scope };
        }
        export { facebook_7 as facebook };
        const google_7: {};
        export { google_7 as google };
        const loginwithamazon_7: {};
        export { loginwithamazon_7 as loginwithamazon };
    }
    export namespace name {
        export namespace facebook_8 {
            const attr_13: string;
            export { attr_13 as attr };
            const scope_13: string;
            export { scope_13 as scope };
        }
        export { facebook_8 as facebook };
        export namespace google_8 {
            const attr_14: string;
            export { attr_14 as attr };
            const scope_14: string;
            export { scope_14 as scope };
        }
        export { google_8 as google };
        export namespace loginwithamazon_8 {
            const attr_15: string;
            export { attr_15 as attr };
            const scope_15: string;
            export { scope_15 as scope };
        }
        export { loginwithamazon_8 as loginwithamazon };
    }
    export namespace nickname {
        const facebook_9: {};
        export { facebook_9 as facebook };
        const google_9: {};
        export { google_9 as google };
        const loginwithamazon_9: {};
        export { loginwithamazon_9 as loginwithamazon };
    }
    export namespace phone_number {
        const facebook_10: {};
        export { facebook_10 as facebook };
        export namespace google_10 {
            const attr_16: string;
            export { attr_16 as attr };
            const scope_16: string;
            export { scope_16 as scope };
        }
        export { google_10 as google };
        const loginwithamazon_10: {};
        export { loginwithamazon_10 as loginwithamazon };
    }
    export namespace picture {
        export namespace facebook_11 {
            const attr_17: string;
            export { attr_17 as attr };
            const scope_17: string;
            export { scope_17 as scope };
        }
        export { facebook_11 as facebook };
        export namespace google_11 {
            const attr_18: string;
            export { attr_18 as attr };
            const scope_18: string;
            export { scope_18 as scope };
        }
        export { google_11 as google };
        const loginwithamazon_11: {};
        export { loginwithamazon_11 as loginwithamazon };
    }
    export namespace preferred_username {
        const facebook_12: {};
        export { facebook_12 as facebook };
        const google_12: {};
        export { google_12 as google };
        const loginwithamazon_12: {};
        export { loginwithamazon_12 as loginwithamazon };
    }
    export namespace profile {
        const facebook_13: {};
        export { facebook_13 as facebook };
        const google_13: {};
        export { google_13 as google };
        const loginwithamazon_13: {};
        export { loginwithamazon_13 as loginwithamazon };
    }
    export namespace zoneinfo {
        const facebook_14: {};
        export { facebook_14 as facebook };
        const google_14: {};
        export { google_14 as google };
        const loginwithamazon_14: {};
        export { loginwithamazon_14 as loginwithamazon };
    }
    export namespace website {
        const facebook_15: {};
        export { facebook_15 as facebook };
        const google_15: {};
        export { google_15 as google };
        const loginwithamazon_15: {};
        export { loginwithamazon_15 as loginwithamazon };
    }
    export namespace username {
        export namespace facebook_16 {
            const attr_19: string;
            export { attr_19 as attr };
            const scope_19: string;
            export { scope_19 as scope };
        }
        export { facebook_16 as facebook };
        export namespace google_16 {
            const attr_20: string;
            export { attr_20 as attr };
            const scope_20: string;
            export { scope_20 as scope };
        }
        export { google_16 as google };
        export namespace loginwithamazon_16 {
            const attr_21: string;
            export { attr_21 as attr };
            const scope_21: string;
            export { scope_21 as scope };
        }
        export { loginwithamazon_16 as loginwithamazon };
    }
    export namespace updated_at {
        export namespace facebook_17 {
            const attr_22: string;
            export { attr_22 as attr };
            const scope_22: string;
            export { scope_22 as scope };
        }
        export { facebook_17 as facebook };
        const google_17: {};
        export { google_17 as google };
        const loginwithamazon_17: {};
        export { loginwithamazon_17 as loginwithamazon };
    }
}
export const updateFlowMap: ({
    name: string;
    value: string;
    conditionKey: string;
    conditionMsg?: undefined;
} | {
    name: string;
    value: string;
    conditionKey?: undefined;
    conditionMsg?: undefined;
} | {
    name: string;
    value: string;
    conditionKey: string;
    conditionMsg: string;
})[];
export const capabilities: ({
    name: string;
    value: string;
    triggers: {
        DefineAuthChallenge: string[];
        CreateAuthChallenge: string[];
        VerifyAuthChallengeResponse: string[];
        CustomMessage?: undefined;
        PostConfirmation?: undefined;
        PreSignup?: undefined;
        PreTokenGeneration?: undefined;
    };
} | {
    name: string;
    value: string;
    triggers: {
        CustomMessage: string[];
        DefineAuthChallenge?: undefined;
        CreateAuthChallenge?: undefined;
        VerifyAuthChallengeResponse?: undefined;
        PostConfirmation?: undefined;
        PreSignup?: undefined;
        PreTokenGeneration?: undefined;
    };
} | {
    name: string;
    value: string;
    triggers: {
        PostConfirmation: string[];
        DefineAuthChallenge?: undefined;
        CreateAuthChallenge?: undefined;
        VerifyAuthChallengeResponse?: undefined;
        CustomMessage?: undefined;
        PreSignup?: undefined;
        PreTokenGeneration?: undefined;
    };
} | {
    name: string;
    value: string;
    triggers: {
        PreSignup: string[];
        DefineAuthChallenge?: undefined;
        CreateAuthChallenge?: undefined;
        VerifyAuthChallengeResponse?: undefined;
        CustomMessage?: undefined;
        PostConfirmation?: undefined;
        PreTokenGeneration?: undefined;
    };
} | {
    name: string;
    value: string;
    triggers: {
        PreTokenGeneration: string[];
        DefineAuthChallenge?: undefined;
        CreateAuthChallenge?: undefined;
        VerifyAuthChallengeResponse?: undefined;
        CustomMessage?: undefined;
        PostConfirmation?: undefined;
        PreSignup?: undefined;
    };
})[];
export const additonalConfigMap: {
    name: string;
    value: string[];
}[];
//# sourceMappingURL=string-maps.d.ts.map