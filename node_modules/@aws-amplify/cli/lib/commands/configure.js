"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = void 0;
const c0_analyzeProject_1 = require("../config-steps/c0-analyzeProject");
const c1_configFrontend_1 = require("../config-steps/c1-configFrontend");
const c2_configProviders_1 = require("../config-steps/c2-configProviders");
const configure_new_user_1 = require("../configure-new-user");
const c9_onFailure_1 = require("../config-steps/c9-onFailure");
const c9_onSuccess_1 = require("../config-steps/c9-onSuccess");
const input_params_manager_1 = require("../input-params-manager");
const app_config_1 = require("../app-config");
exports.run = async (context) => {
    if (context.parameters.options['usage-data-off']) {
        app_config_1.write(context, { usageDataConfig: { isUsageTrackingEnabled: false } });
        context.print.success('Usage Data has been turned off');
        return;
    }
    if (context.parameters.options['usage-data-on']) {
        app_config_1.write(context, { usageDataConfig: { isUsageTrackingEnabled: true } });
        context.print.success('Usage Data has been turned on');
        return;
    }
    if (!context.parameters.first) {
        await configure_new_user_1.configureNewUser(context);
    }
    if (context.parameters.first === 'project') {
        constructExeInfo(context);
        try {
            await c0_analyzeProject_1.analyzeProject(context);
            await c1_configFrontend_1.configFrontendHandler(context);
            await c2_configProviders_1.configProviders(context);
            await c9_onSuccess_1.onSuccess(context);
        }
        catch (e) {
            context.usageData.emitError(e);
            c9_onFailure_1.onFailure(e);
            process.exitCode = 1;
        }
    }
};
function constructExeInfo(context) {
    context.exeInfo = context.amplify.getProjectDetails();
    context.exeInfo.inputParams = input_params_manager_1.normalizeInputParams(context);
}
//# sourceMappingURL=configure.js.map