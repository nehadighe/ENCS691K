"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readHeadlessPayload = exports.isHeadlessCommand = void 0;
const readline_1 = __importDefault(require("readline"));
const headlessPayloadReadTimeoutMillis = 2000;
exports.isHeadlessCommand = (context) => context.input.options && context.input.options.headless;
exports.readHeadlessPayload = async () => {
    const rl = readline_1.default.createInterface({
        input: process.stdin,
        output: process.stdout,
        terminal: false,
    });
    const id = setTimeout(() => {
        clearTimeout(id);
        rl.close();
    }, headlessPayloadReadTimeoutMillis);
    return new Promise((resolve, reject) => {
        rl.on('line', line => resolve(line));
        rl.on('close', () => reject(new Error('No input received on stdin')));
    });
};
//# sourceMappingURL=headless-input-utils.js.map